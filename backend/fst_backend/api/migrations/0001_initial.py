# Generated by Django 4.2.9 on 2024-01-06 17:29

import uuid

import django.db.models.deletion
from django.db import migrations, models

import fst_backend.api.fields
import fst_backend.api.models.eventmedia


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Allergy",
            fields=[
                ("id", models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("nuts", "NÃ¼sse"),
                            ("lactose", "Laktose"),
                            ("sesame", "Sesam"),
                            ("fish", "Fisch"),
                            ("eggs", "Eier"),
                            ("gluten", "Gluten"),
                            ("mustard", "Senf"),
                            ("celery", "Sellerie"),
                            ("soy", "Soja"),
                            ("custom", "Sonstige"),
                        ],
                        default="custom",
                        max_length=100,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Event",
            fields=[
                ("id", models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ("title", models.CharField(max_length=64)),
                ("description", models.TextField(blank=True, max_length=64, null=True)),
                ("from_date", fst_backend.api.fields.PartialDateField()),
                ("to_date", fst_backend.api.fields.PartialDateField()),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ParentChildRelationship",
            fields=[
                ("id", models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                (
                    "relationship_type",
                    models.CharField(
                        choices=[("blood", "blood"), ("adopted", "adopted"), ("step", "step")], max_length=50
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Person",
            fields=[
                ("id", models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                (
                    "dietType",
                    models.CharField(
                        choices=[
                            ("not_specified", "----"),
                            ("vegetarian", "Vegetarian"),
                            ("vegan", "Vegan"),
                            ("others", "Other"),
                        ],
                        default="not_specified",
                        max_length=15,
                    ),
                ),
                (
                    "gender",
                    models.CharField(
                        choices=[
                            ("not_specified", "----"),
                            ("male", "Male"),
                            ("female", "Female"),
                            ("diverse", "Diverse"),
                        ],
                        default="not_specified",
                        max_length=15,
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        choices=[("not_specified", "----"), ("prof", "Prof."), ("dr", "Dr."), ("profDr", "Prof. Dr.")],
                        default="not_specified",
                        max_length=15,
                    ),
                ),
                ("lastname", models.CharField(max_length=100)),
                ("middlenames", models.CharField(blank=True, max_length=100, null=True)),
                ("firstname", models.CharField(blank=True, max_length=100, null=True)),
                ("birthday", fst_backend.api.fields.PartialDateField(blank=True, null=True)),
                ("birthname", models.CharField(blank=True, max_length=100, null=True)),
                ("placeOfBirth", models.CharField(blank=True, max_length=100, null=True)),
                ("deathday", fst_backend.api.fields.PartialDateField(blank=True, null=True)),
                ("placeOfDeath", models.CharField(blank=True, max_length=100, null=True)),
                ("address", models.CharField(blank=True, max_length=100, null=True)),
                ("zip", models.CharField(blank=True, max_length=10, null=True)),
                ("city", models.CharField(blank=True, max_length=100, null=True)),
                ("country", models.CharField(blank=True, max_length=100, null=True)),
                ("email", models.EmailField(blank=True, max_length=100, null=True)),
                ("phone", models.CharField(blank=True, max_length=100, null=True)),
                ("allergies", models.ManyToManyField(blank=True, to="api.allergy")),
                (
                    "parents",
                    models.ManyToManyField(
                        blank=True, related_name="children", through="api.ParentChildRelationship", to="api.person"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Tag",
            fields=[
                ("id", models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ("label", models.CharField(max_length=64)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="SpouseRelationship",
            fields=[
                ("id", models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                (
                    "relationship_type",
                    models.CharField(choices=[("partnership", "partnership"), ("married", "married")], max_length=16),
                ),
                ("begin_date", fst_backend.api.fields.PartialDateField()),
                ("end_date", fst_backend.api.fields.PartialDateField()),
                (
                    "from_person",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="from_spouse_person_set",
                        to="api.person",
                    ),
                ),
                (
                    "to_person",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="to_spouse_person_set",
                        to="api.person",
                    ),
                ),
            ],
            options={
                "unique_together": {("from_person", "to_person")},
            },
        ),
        migrations.CreateModel(
            name="SiblingRelationship",
            fields=[
                ("id", models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                (
                    "relationship_type",
                    models.CharField(choices=[("blood", "blood"), ("half", "half"), ("step", "step")], max_length=10),
                ),
                (
                    "from_person",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="from_sibling_person_set",
                        to="api.person",
                    ),
                ),
                (
                    "to_person",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="to_sibling_person_set",
                        to="api.person",
                    ),
                ),
            ],
            options={
                "unique_together": {("from_person", "to_person")},
            },
        ),
        migrations.AddField(
            model_name="person",
            name="siblings",
            field=models.ManyToManyField(
                blank=True, related_name="sibling_set", through="api.SiblingRelationship", to="api.person"
            ),
        ),
        migrations.AddField(
            model_name="person",
            name="spouses",
            field=models.ManyToManyField(
                blank=True, related_name="spouse_set", through="api.SpouseRelationship", to="api.person"
            ),
        ),
        migrations.AddField(
            model_name="parentchildrelationship",
            name="child",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, related_name="parent_relations", to="api.person"
            ),
        ),
        migrations.AddField(
            model_name="parentchildrelationship",
            name="parent",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, related_name="child_relations", to="api.person"
            ),
        ),
        migrations.CreateModel(
            name="EventMedia",
            fields=[
                ("id", models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                (
                    "mediaUrl",
                    models.ImageField(blank=True, null=True, upload_to=fst_backend.api.models.eventmedia.upload_to),
                ),
                ("mimeType", models.CharField(max_length=64)),
                ("thumbnailUrl", models.ImageField(blank=True, editable=False, null=True, upload_to="thumbnails/")),
                (
                    "event",
                    models.ForeignKey(
                        blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to="api.event"
                    ),
                ),
                ("tags", models.ManyToManyField(blank=True, to="api.tag")),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="event",
            name="organizer",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="events",
                to="api.person",
            ),
        ),
        migrations.AddField(
            model_name="event",
            name="tags",
            field=models.ManyToManyField(to="api.tag"),
        ),
        migrations.AddConstraint(
            model_name="parentchildrelationship",
            constraint=models.UniqueConstraint(fields=("parent", "child"), name="unique_parent_child_relation"),
        ),
    ]
