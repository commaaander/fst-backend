# Generated by Django 4.2.6 on 2023-10-19 09:47

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import fst_backend.api.models.eventmedia
import uuid


class Migration(migrations.Migration):

    replaces = [('api', '0001_initial'), ('api', '0002_event_organizer'), ('api', '0003_remove_eventmedia_from_day_and_more'), ('api', '0004_eventmedia_thumbnail'), ('api', '0005_remove_eventmedia_thumbnail_eventmedia_thumbnailurl')]

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Allergy',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('type', models.CharField(choices=[('nuts', 'NÃ¼sse'), ('lactose', 'Laktose'), ('sesame', 'Sesam'), ('fish', 'Fisch'), ('eggs', 'Eier'), ('gluten', 'Gluten'), ('mustard', 'Senf'), ('celery', 'Sellerie'), ('soy', 'Soja'), ('custom', 'Sonstige')], default='custom', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='CustomDate',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('day', models.PositiveIntegerField(blank=True, null=True)),
                ('month', models.PositiveIntegerField(blank=True, null=True)),
                ('year', models.PositiveIntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=64)),
                ('description', models.TextField(blank=True, max_length=64, null=True)),
                ('from_date', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='from_events', to='api.customdate')),
            ],
        ),
        migrations.CreateModel(
            name='Member',
            fields=[
                ('title', models.CharField(choices=[('not_specified', '----'), ('prof', 'Prof.'), ('dr', 'Dr.'), ('profDr', 'Prof. Dr.')], max_length=15)),
                ('gender', models.CharField(choices=[('not_specified', '----'), ('male', 'Male'), ('female', 'Female'), ('diverse', 'Diverse')], max_length=15)),
                ('dietType', models.CharField(choices=[('not_specified', 'None'), ('vegetarian', 'Vegetarian'), ('vegan', 'Vegan'), ('others', 'Other')], max_length=15)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('firstname', models.CharField(blank=True, max_length=100, null=True)),
                ('lastname', models.CharField(max_length=100)),
                ('middlenames', models.CharField(blank=True, max_length=100, null=True)),
                ('birthname', models.CharField(blank=True, max_length=100, null=True)),
                ('address', models.CharField(blank=True, max_length=100, null=True)),
                ('zip', models.CharField(blank=True, max_length=10, null=True)),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('country', models.CharField(blank=True, max_length=100, null=True)),
                ('email', models.EmailField(blank=True, max_length=100, null=True)),
                ('phone', models.CharField(blank=True, max_length=100, null=True)),
                ('placeOfBirth', models.CharField(blank=True, max_length=100, null=True)),
                ('placeOfDeath', models.CharField(blank=True, max_length=100, null=True)),
                ('allergies', models.ManyToManyField(blank=True, to='api.allergy')),
                ('birthday', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='birthday_members', to='api.customdate')),
                ('deathday', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='deathday_members', to='api.customdate')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('label', models.CharField(max_length=64)),
            ],
        ),
        migrations.CreateModel(
            name='Node',
            fields=[
                ('member_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='api.member')),
                ('generation', models.CharField(choices=[('not_specified', '----'), ('yellow', 'yellow'), ('orange', 'orange'), ('green', 'green'), ('blue', 'blue'), ('red', 'Female'), ('violet', 'Diverse')], max_length=15)),
            ],
            options={
                'abstract': False,
            },
            bases=('api.member', models.Model),
        ),
        migrations.CreateModel(
            name='EventMedia',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('mediaUrl', models.ImageField(blank=True, null=True, upload_to=fst_backend.api.models.eventmedia.upload_to)),
                ('mimeType', models.CharField(max_length=64)),
                ('from_day', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(31)])),
                ('from_month', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(13)])),
                ('from_year', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1000), django.core.validators.MaxValueValidator(10000)])),
                ('event', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.event')),
                ('tags', models.ManyToManyField(blank=True, to='api.tag')),
            ],
        ),
        migrations.AddField(
            model_name='event',
            name='tags',
            field=models.ManyToManyField(to='api.tag'),
        ),
        migrations.AddField(
            model_name='event',
            name='to_date',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='to_events', to='api.customdate'),
        ),
        migrations.CreateModel(
            name='SpouseRelationship',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('relationship_type', models.CharField(choices=[('partnership', 'partnership'), ('married', 'married')], max_length=16)),
                ('from_node', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='from_spouse_node_set', to='api.node')),
                ('to_node', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='to_spouse_node_set', to='api.node')),
            ],
            options={
                'unique_together': {('from_node', 'to_node')},
            },
        ),
        migrations.CreateModel(
            name='SiblingRelationship',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('relationship_type', models.CharField(choices=[('blood', 'blood'), ('half', 'half'), ('step', 'step')], max_length=10)),
                ('from_node', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='from_sibling_node_set', to='api.node')),
                ('to_node', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='to_sibling_node_set', to='api.node')),
            ],
            options={
                'unique_together': {('from_node', 'to_node')},
            },
        ),
        migrations.CreateModel(
            name='ParentChildRelationship',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('relationship_type', models.CharField(choices=[('blood', 'blood'), ('adopted', 'adopted'), ('step', 'step')], max_length=50)),
                ('child', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='parent_relations', to='api.node')),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='child_relations', to='api.node')),
            ],
        ),
        migrations.AddField(
            model_name='node',
            name='parents',
            field=models.ManyToManyField(blank=True, related_name='children', through='api.ParentChildRelationship', to='api.node'),
        ),
        migrations.AddField(
            model_name='node',
            name='siblings',
            field=models.ManyToManyField(blank=True, related_name='sibling_set', through='api.SiblingRelationship', to='api.node'),
        ),
        migrations.AddField(
            model_name='node',
            name='spouses',
            field=models.ManyToManyField(blank=True, related_name='spouse_set', through='api.SpouseRelationship', to='api.node'),
        ),
        migrations.AddConstraint(
            model_name='parentchildrelationship',
            constraint=models.UniqueConstraint(fields=('parent', 'child'), name='unique_parent_child_relation'),
        ),
        migrations.AddField(
            model_name='event',
            name='organizer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='events', to='api.member'),
        ),
        migrations.RemoveField(
            model_name='eventmedia',
            name='from_day',
        ),
        migrations.RemoveField(
            model_name='eventmedia',
            name='from_month',
        ),
        migrations.RemoveField(
            model_name='eventmedia',
            name='from_year',
        ),
        migrations.AddField(
            model_name='eventmedia',
            name='from_date',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='eventmedia_froms', to='api.customdate'),
        ),
        migrations.AddField(
            model_name='eventmedia',
            name='thumbnailUrl',
            field=models.ImageField(blank=True, editable=False, null=True, upload_to='thumbnails/'),
        ),
    ]
